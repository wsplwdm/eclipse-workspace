package przycisk_plik.controller;
import lab1.Column;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.nio.charset.StandardCharsets;
import lab1.DataFrame;
import lab1.Value;
import java.io.File;
import java.util.List;
import javafx.fxml.FXML;
import javafx.print.PrinterJob;
import javafx.scene.Node;
import javafx.scene.chart.CategoryAxis;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.ScatterChart;
import javafx.scene.chart.XYChart;
import javafx.scene.chart.XYChart.Series;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.text.*;
import javafx.stage.FileChooser;
import javafx.stage.FileChooser.ExtensionFilter;

public class StackPaneController {
	
	List<String> lstFile;
	@FXML
	private Button button;
	public String stat;
	public StackPaneController() {}
	
	private void print(Node node) {
	    System.out.println("Creating a printer job...");

	    PrinterJob job = PrinterJob.createPrinterJob();
	    if (job != null) {
	      System.out.println(job.jobStatusProperty().asString());

	      boolean printed = job.printPage(node);
	      if (printed) {
	        job.endJob();
	      } else {
	        System.out.println("Printing failed.");
	      }
	    } else {
	      System.out.println("Could not create a printer job.");
	    }
	  }
	@FXML
	public void onActonButton() {
		String max,min,mean,var,sum,std;
		System.out.println("data frame stats:");
		String[] typy = {"Double","Double","Double"};
    	boolean header = true;
        try {
			DataFrame plik = new DataFrame("C:\\Users\\darkb\\Documents\\data.csv",typy,header);
			
			
			
			
		   		  
		    
		    
		    ByteArrayOutputStream baos = new ByteArrayOutputStream();
		    PrintStream ps = new PrintStream(baos);
		    PrintStream old = System.out;
		    System.setOut(ps);
		    
	        plik.max().print();
	        
	        System.out.flush();
		    System.setOut(old);
		    max = baos.toString();
		   
	        System.out.println("min");
	        plik.min().print();
	        System.out.println("mean");
	        plik.mean().print();
	        System.out.println("var");
	        plik.var().print();
	        System.out.println("sum");
	        plik.sum().print();
	        System.out.println("std");
	        plik.std().print();
	       
	        stats.setText("max:"+max);
	        
	     // Put things back
		    
		    
		    
	       
		} catch (Exception e) {
			
			e.printStackTrace();
		}
		
	}
	@SuppressWarnings({ "rawtypes", "unchecked" })
	public void onActonButton2() {
		FileChooser fc = new FileChooser();
		fc.getExtensionFilters().add(new ExtensionFilter("csv Files", "*.csv"));
		List<File> f = fc.showOpenMultipleDialog(null);
		for(File file: f) {
		
		
		System.out.println("data frame stats:");
		String[] typy = {"Double","Double","Double"};
    	boolean header = true;
    	
        try {
			DataFrame plik = new DataFrame(file.getAbsolutePath(),typy,header);
			
			System.out.println("max");
	        plik.max().print();
	        System.out.println("min");
	        plik.min().print();
	        System.out.println("mean");
	        plik.mean().print();
	        System.out.println("var");
	        plik.var().print();
	        System.out.println("sum");
	        plik.sum().print();
	        System.out.println("std");
	        plik.std().print();
	        
	        
	        
	        
	     
	        
	        
		} catch (Exception e) {
			
			e.printStackTrace();
		}
        
		}
		
	}
	
	@FXML
	public Label stats;
	
	
	public void onActonButton3() {
		
	
	}
}
